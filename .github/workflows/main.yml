name: CI

on: push

jobs:
  test_e2e:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          username: _json_key
          password: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
          registry: gcr.io
          image_name: turbothrift_e2e
          context: e2e
      - run: docker-compose build
      - run: docker-compose up -d
      - run: docker run --network=host gcr.io/turbothrift/turbothrift_e2e:latest
      - run: docker-compose logs
  test_server:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          username: _json_key
          password: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
          registry: gcr.io
          image_name: turbothrift_server_dev
          context: server
      - run: docker-compose run --entrypoint "wait-for-it -s database:5432 -- npx jest ." server
      - run: docker-compose logs

  test_client:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          username: _json_key
          password: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
          registry: gcr.io
          image_name: turbothrift_client_dev
          context: client
      - run: docker-compose run client npm run lint

  test_scrape_job:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          username: _json_key
          password: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
          registry: gcr.io
          image_name: turbothrift_scrape_dev
          context: scrape
      - run: cp .env.example .env
      - run: docker-compose up -d database
      - run: docker-compose -f docker-compose.scrape.yaml run --rm --entrypoint "wait-for-it -s database:5432 -- npm test" scrape
      - run: docker-compose logs

  build_client:
    needs: [test_client, test_server, test_scrape_job]
    runs-on: ubuntu-20.04
    env:
      GOOGLE_CLIENT_ID: "${{ secrets.GOOGLE_CLIENT_ID }}"
    steps:
      - uses: actions/checkout@v2
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          username: _json_key
          password: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
          registry: gcr.io
          image_name: turbothrift_client_release
          context: client
          dockerfile: Dockerfile.prod

  deploy:
    defaults:
      run:
        working-directory: terraform
    needs: [build_client]
    runs-on: ubuntu-20.04
    env:
      GOOGLE_SERVICEACCOUNT: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/googlecreds
      TF_IN_AUTOMATION: true
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - run: echo $GOOGLE_SERVICEACCOUNT > /tmp/googlecreds
      - run: terraform init
      - run: terraform apply -auto-approve
